{"version":3,"sources":["styles/Header.style.js","firebase.js","components/Header.js","styles/Sidebar.style.js","styles/SidebarOption.style.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","styles/Chat.style.js","styles/ChatInput.style.js","components/ChatInput.js","styles/Message.style.js","components/Message.js","components/Chat.js","styles/Login.style.js","components/Login.js","components/Loading.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Left","UserAvatar","Avatar","Search","Input","input","Right","db","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","googleProvider","GoogleAuthProvider","microsoftProvider","OAuthProvider","Header","useAuthState","user","src","photoURL","alt","displayName","onClick","signOut","placeholder","Info","Channel","h3","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","SidebarOption","key","id","Icon","title","addChannelOption","dispatch","useDispatch","channelName","prompt","collection","add","font-size","style","padding","Sidebar","useCollection","channels","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","Messages","Bottom","ChatInput","channelId","chatRef","inputRef","useRef","ref","Button","type","e","preventDefault","message","current","value","timestamp","FieldValue","serverTimestamp","userImage","scrollIntoView","behavior","img","Message","Date","toDate","toUTCString","Chat","useSelector","useDocument","roomDetails","orderBy","roomMessages","useEffect","StarBorderOutlined","InfoOutlined","InnerContainer","Logo","Login","margin","marginTop","variant","signInWithPopup","catch","error","alert","height","marginRight","color","Loading","Contents","size","App","Body","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a846c045.chunk.js","sourcesContent":["import { Avatar } from \"@material-ui/core\"\nimport styled from \"styled-components\"\n\nexport const Container = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    justify-content: space-between;\n    padding: 10px 0;\n    background-color: var(--slack-color);\n    color: white;\n`;\n\nexport const Left = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: center;\n    margin-left: 20px;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 30px;\n    }\n`;\n\nexport const UserAvatar = styled(Avatar)`\n    cursor: pointer;\n    opacity: 1;\n\n    :hover {\n        opacity: 0.7;\n    }\n`;\n\nexport const Search = styled.div`\n    flex: 0.4;\n    display: flex;\n    align-items: center;\n    padding: 0 50px;\n    color: gray;\n    background-color: #421f44;\n    border: 1px solid gray;\n    border-radius: 6px;\n    opacity: 1;\n`;\n\nexport const Input = styled.input`\n    background-color: transparent;\n    text-align: center;\n    color: white;\n    min-width: 30vw;\n    border: none;\n    outline: 0;\n`;\n\nexport const Right = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: flex-end;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 20px;\n    }\n`;","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAbKCaGrVfe1Bkv5hUrj5kG64bN25EUoYg\",\n    authDomain: \"slack-clone-ea370.firebaseapp.com\",\n    projectId: \"slack-clone-ea370\",\n    storageBucket: \"slack-clone-ea370.appspot.com\",\n    messagingSenderId: \"975134060459\",\n    appId: \"1:975134060459:web:659bb76f2f89bb37f52cee\"\n};\n\nconst app = !firebase.apps.length\n    ? firebase.initializeApp(firebaseConfig)\n    : firebase.app();\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nvar microsoftProvider = new firebase.auth.OAuthProvider('microsoft.com');\n\nexport { db, auth, googleProvider, microsoftProvider };","import AccessTimeIcon from \"@material-ui/icons/AccessTime\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\"\nimport { Container, Left, UserAvatar, Search, Input, Right } from \"../styles/Header.style\"\nimport { useAuthState } from \"react-firebase-hooks/auth\"\nimport { auth } from \"../firebase\"\n\nfunction Header() {\n    const [user] = useAuthState(auth);\n    return (\n        <Container>\n            <Left>\n                <UserAvatar\n                    src={user?.photoURL}\n                    alt={user?.displayName}\n                    onClick={() => auth.signOut()}\n                />\n                <AccessTimeIcon />\n            </Left>\n\n            <Search>\n                <SearchIcon />\n                <Input placeholder=\"Search\" />\n            </Search>\n\n            <Right>\n                <HelpOutlineIcon />\n            </Right>\n        </Container>\n    )\n}\n\nexport default Header","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    position: relative;\n    flex: 0.3;\n    color: white;\n    background-color: var(--slack-color);\n    border-top: 1px solid #49274b;\n    max-width: 260px;\n    margin-top: 60px;\n    overflow-y: scroll;\n\n    > hr {\n        margin-top: 10px;\n        margin-bottom: 10px;\n        border: 1px solid #49274b;\n    }\n\n    ::-webkit-scrollbar {\n        display: none;\n    }\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    border-bottom: 1px solid #49274b;\n    padding: 13px;\n\n    > .MuiSvgIcon-root {\n        padding: 8px;\n        color: #49274b;\n        font-size: 18px;\n        background-color: white;\n        border-radius: 999px;\n        cursor: pointer;\n    }\n\n    > .MuiSvgIcon-root:hover {\n        color: white;\n        background-color: var(--slack-color);\n    }\n`;\n\nexport const Info = styled.div`\n    flex: 1;\n\n    > h2 {\n        font-size: 15px;\n        font-weight: 900;\n        margin-bottom: 5px;\n    }\n\n    > h3 {\n        display: flex;\n        font-size: 13px;\n        font-weight: 400px;\n        align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n        font-size: 14px;\n        margin-top: 1px;\n        margin-right: 2px;\n        color: green;\n    }\n`;","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding-left: 2px;\n    cursor: pointer;\n    opacity: 1;\n    \n    :hover {\n        opacity: 0.9;\n        background-color: #340e36;\n    }\n\n    > h3 {\n        font-weight: 500;\n    }\n\n    > h3 > span {\n        padding: 15px;\n    }\n`;\n\nexport const Channel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;\n\n// 1:16:02","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = (state) => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import { db } from \"../firebase\";\nimport { Container, Channel } from \"../styles/SidebarOption.style\"\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from \"../features/appSlice\"\n\nfunction SidebarOption({ key, id, Icon, title, addChannelOption }) {\n\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt(\"Please enter the channel name\");\n\n        if (channelName) {\n            db.collection(\"rooms\").add({\n                name: channelName,\n            })\n        }\n    }\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(\n                enterRoom({\n                    roomId: id,\n                }))\n        }\n    }\n\n    return (\n        <Container\n            onClick={addChannelOption ? addChannel : selectChannel}\n        >\n            {Icon && <Icon font-size=\"small\" style={{ padding: 10 }} />}\n            {Icon ? (\n                <h3>{title}</h3>\n            ) : (\n                <Channel>\n                    <span>#</span> {title}\n                </Channel>\n            )}\n        </Container>\n    )\n}\n\nexport default SidebarOption\n\n// 1:42:19","import { Container, Header, Info } from \"../styles/Sidebar.style\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\"\nimport InboxIcon from \"@material-ui/icons/Inbox\"\nimport DraftsIcon from \"@material-ui/icons/Drafts\"\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\"\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\"\nimport AppsIcon from \"@material-ui/icons/Apps\"\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\"\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\"\nimport CreateIcon from \"@material-ui/icons/Create\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport SidebarOption from \"./SidebarOption\"\nimport { useCollection } from \"react-firebase-hooks/firestore\"\nimport { db, auth } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\nfunction Sidebar() {\n    const [channels] = useCollection(db.collection(\"rooms\"));\n    const [user] = useAuthState(auth);\n\n    return (\n        <Container>\n            <Header>\n                <Info>\n                    <h2>Slack</h2>\n                    <h3>\n                        <FiberManualRecordIcon />\n                        {user?.displayName}\n                    </h3>\n                </Info>\n\n                <CreateIcon />\n            </Header>\n\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User Groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File Browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\n            <hr />\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n            <hr />\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {channels?.docs.map((doc) => (\n                <SidebarOption\n                    key={doc.id}\n                    id={doc.id}\n                    title={doc.data().name}\n                />\n            ))}\n        </Container>\n    )\n}\n\nexport default Sidebar\n\n","import styled from \"styled-components\"\n\n\nexport const Container = styled.div`\n    flex: 0.7;\n    flex-grow: 1;\n    margin-top: 60px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n`;\n\nexport const Header = styled.div`\n    position: fixed;\n    top: 50;\n    width: 80vw;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px;\n    border-bottom: 1px solid whitesmoke;\n    background-color: white;\n    z-index: 1;\n`;\n\nexport const Left = styled.div`\n    display: flex;\n    align-items: center;\n\n    > h4 {\n        display: flex;\n        text-transform: lowercase;\n        margin-right: 10px;\n    }\n\n    > h4 > .MuiSvgIcon-root {\n        margin-left: 20px;\n        font-size: 10px;\n    }\n`;\n\nexport const Right = styled.div`\n    margin-right: 50px;\n\n    > p {\n        display: flex;\n        align-items: center;\n        font-size: 14px;\n    }\n\n    > p > .MuiSvgIcon-root {\n        margin-right: 5px;\n        font-size: 16px;\n    }\n`;\n\nexport const Messages = styled.div`\n    margin-top: 60px;\n`;\n\nexport const Bottom = styled.div`\n    padding-bottom: 200px;\n`;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    border-radius: 20px;\n\n    > form {\n        position: relative;\n        display: flex;\n        justify-content: center;\n    }\n\n    > form > button {\n        display: none;\n    }\n`;\n\nexport const Input = styled.input`\n    position: fixed;\n    bottom: 30px;\n    width: 60%;\n    border: 1px solid lightgray;\n    border-radius: 3px;\n    padding: 20px;\n    outline: none;\n`;","import { Button } from \"@material-ui/core\"\nimport { useRef } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { Container, Input } from \"../styles/ChatInput.style\"\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\nfunction ChatInput({ channelName, channelId, chatRef }) {\n\n    const inputRef = useRef(null);\n    const [user] = useAuthState(auth);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if (!channelId) return false;\n\n        db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n            message: inputRef.current.value,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage: user.photoURL,\n        });\n\n        chatRef.current.scrollIntoView({\n            behavior: \"smooth\",\n        });\n\n        inputRef.current.value = null;\n    }\n\n    return (\n        <Container>\n            <form>\n                <Input\n                    ref={inputRef}\n                    placeholder={`Message #${channelName}`}\n                />\n                <Button type=\"submit\" onClick={sendMessage}>\n                    Send\n                </Button>\n            </form>\n        </Container>\n    )\n}\n\nexport default ChatInput\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 20px;\n`;\n\nexport const UserAvatar = styled.img`\n    height: 50px;\n    border-radius: 8px;\n`;\n\nexport const Info = styled.div`\n    padding-left: 10px;\n\n    > h4 > span {\n        color: gray;\n        font-weight: 300;\n        margin-left: 4px;\n        font-size: 10px;\n    }\n`;","import { Container, UserAvatar, Info } from \"../styles/Message.style\"\n\nfunction Message({ id, user, timestamp, message, userImage }) {\n    return (\n        <Container>\n            <UserAvatar\n                src={userImage}\n                alt=\"userImage\"\n            />\n\n            <Info>\n                <h4>\n                    {user}{\" \"}\n                    <span>\n                        {new Date(timestamp?.toDate()).toUTCString()}\n                    </span>\n                </h4>\n                <p>{message}</p>\n            </Info>\n        </Container>\n    )\n}\n\nexport default Message\n","import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\"\nimport { selectRoomId } from \"../features/appSlice\"\nimport { useSelector } from \"react-redux\";\nimport { Container, Header, Right, Left, Messages, Bottom } from \"../styles/Chat.style\"\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\"\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { useEffect, useRef } from \"react\";\n\nfunction Chat() {\n\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection(\"rooms\").doc(roomId)\n    )\n    const [roomMessages] = useCollection(\n        roomId &&\n        db\n            .collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n    );\n    const chatRef = useRef(null);\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, roomMessages])\n\n    return (\n        <Container>\n            {roomDetails && roomMessages && (\n                <>\n                    <Header>\n                        <Left>\n                            <h4>\n                                <strong>#{roomDetails?.data().name}</strong>\n                            </h4>\n                            <StarBorderOutlined />\n                        </Left>\n\n                        <Right>\n                            <p>\n                                <InfoOutlined />\n                            Details\n                    </p>\n                        </Right>\n                    </Header>\n\n                    <Messages>\n                        {\n                            roomMessages?.docs.map((doc) => {\n                                const { message, timestamp, user, userImage } = doc.data();\n\n                                return (\n                                    <Message\n                                        key={doc.id}\n                                        id={doc.id}\n                                        message={message}\n                                        timestamp={timestamp}\n                                        user={user}\n                                        userImage={userImage}\n                                    />\n                                )\n                            })\n                        }\n                        <Bottom ref={chatRef} />\n                    </Messages>\n\n                    <ChatInput\n                        chatRef={chatRef}\n                        channelName={roomDetails?.data().name}\n                        channelId={roomId}\n                    />\n                </>\n            )}\n        </Container>\n    )\n}\n\nexport default Chat\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    background-color: #f8f8f8;\n    height: 100vh;\n    display: grid;\n    place-items: center;\n`;\n\nexport const InnerContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    background-color: white;\n    padding: 100px;\n    text-align: center;\n    border-radius: 10px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n`;\n\nexport const Logo = styled.img`\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 40px;\n`;","import { Button } from \"@material-ui/core\"\nimport { auth, microsoftProvider, googleProvider } from \"../firebase\"\nimport { Container, InnerContainer, Logo } from \"../styles/Login.style\"\n\nfunction Login() {\n\n    const signInWithMicrosoft = () => {\n        auth.signInWithPopup(microsoftProvider)\n            .catch((error) => alert(error.message));\n    }\n\n    const signInWithGoogle = () => {\n        auth.signInWithPopup(googleProvider)\n            .catch((error) => alert(error.message));\n    }\n\n    return (\n        <Container>\n            <InnerContainer>\n                <Logo\n                    src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\"\n                    alt=\"Slack Logo\"\n                />\n                <h1>Sign In To Slack</h1>\n                <p>slack.com</p>\n\n                <Button\n                    style={{ margin: \"10px\", marginTop: \"20px\" }}\n                    variant=\"outlined\"\n                    onClick={signInWithMicrosoft}\n                >\n                    <img\n                        height={20}\n                        style={{ marginRight: \"10px\" }}\n                        src=\"https://c.s-microsoft.com/favicon.ico?v2\"\n                        alt=\"Microsoft\"\n                    />\n                    Sign in with Microsoft\n                </Button>\n\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    style={{ marginTop: \"10px\" }}\n                    onClick={signInWithGoogle}\n                >\n                    <img\n                        height={20}\n                        style={{ marginRight: \"10px\" }}\n                        src=\"http://assets.stickpng.com/images/5847f9cbcef1014c0b5e48c8.png\"\n                        alt=\"Google\"\n                    />\n                    Sign in with Google\n                </Button>\n            </InnerContainer>\n        </Container>\n    )\n}\n\nexport default Login\n","import styled from \"styled-components\"\nimport { Circle } from \"better-react-spinkit\";\n\nfunction Loading() {\n    return (\n        <Container>\n            <Contents>\n                <Logo\n                    src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\"\n                    alt=\"Slack Logo\"\n                />\n                <Circle\n                    color=\"#36c5f0\"\n                    size={70}\n                />\n            </Contents>\n        </Container>\n    )\n}\n\nexport default Loading\n\nconst Container = styled.div`\n    display: grid;\n    place-items: center;\n    height: 100vh;\n    width: 100vw;\n`;\n\nconst Contents = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    padding-bottom: 100px;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Logo = styled.img`\n    height: 120px;\n    padding: 20px;\n    margin-bottom: 10px;\n`;","import styled from \"styled-components\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Chat from \"./components/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./components/Login\";\r\nimport Loading from \"./components/Loading\";\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) return <Loading />\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n\r\n            <Body>\r\n              <Sidebar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </Body>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </Container >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Body = styled.div`\r\n  display: flex; \r\n  height: 100vh;\r\n`;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}