{"ast":null,"code":"var _jsxFileName = \"/Users/aisteinlaw/Documents/Code/slack-clone/slack-clone/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\";\nimport { selectRoomId } from \"../features/appSlice\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Header, Right, Left, Messages, Bottom } from \"../styles/Chat.style\";\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const roomId = useSelector(selectRoomId);\n  const [roomDetails] = useDocument(roomId && db.collection(\"rooms\").doc(roomId));\n  const [roomMessages] = useCollection(roomId && db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\"));\n  const chatRef = useRef(null);\n  useEffect(() => {\n    var _chatRef$current;\n\n    chatRef === null || chatRef === void 0 ? void 0 : (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [roomId, roomMessages]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: roomDetails && roomMessages && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Left, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"#\", roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.data().name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(StarBorderOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Right, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(InfoOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), \"Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        children: [roomMessages === null || roomMessages === void 0 ? void 0 : roomMessages.docs.map(doc => {\n          const {\n            message,\n            timestamp,\n            user,\n            userImage\n          } = doc.data();\n          return /*#__PURE__*/_jsxDEV(Message, {\n            id: doc.id,\n            message: message,\n            timestamp: timestamp,\n            user: user,\n            userImage: userImage\n          }, doc.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Bottom, {\n          ref: chatRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        chatRef: chatRef,\n        channelName: roomDetails === null || roomDetails === void 0 ? void 0 : roomDetails.data().name,\n        channelId: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"i528+Rxd/PAFfTJsGHLHxvkqNTU=\", false, function () {\n  return [useSelector, useDocument, useCollection];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/aisteinlaw/Documents/Code/slack-clone/slack-clone/src/components/Chat.js"],"names":["InfoOutlined","StarBorderOutlined","selectRoomId","useSelector","Container","Header","Right","Left","Messages","Bottom","ChatInput","useCollection","useDocument","db","Message","useEffect","useRef","Chat","roomId","roomDetails","collection","doc","roomMessages","orderBy","chatRef","current","scrollIntoView","behavior","data","name","docs","map","message","timestamp","user","userImage","id"],"mappings":"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","sourcesContent":["import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\"\nimport { selectRoomId } from \"../features/appSlice\"\nimport { useSelector } from \"react-redux\";\nimport { Container, Header, Right, Left, Messages, Bottom } from \"../styles/Chat.style\"\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\"\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { useEffect, useRef } from \"react\";\n\nfunction Chat() {\n\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection(\"rooms\").doc(roomId)\n    )\n    const [roomMessages] = useCollection(\n        roomId &&\n        db\n            .collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n    );\n    const chatRef = useRef(null);\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, roomMessages])\n\n    return (\n        <Container>\n            {roomDetails && roomMessages && (\n                <>\n                    <Header>\n                        <Left>\n                            <h4>\n                                <strong>#{roomDetails?.data().name}</strong>\n                            </h4>\n                            <StarBorderOutlined />\n                        </Left>\n\n                        <Right>\n                            <p>\n                                <InfoOutlined />\n                            Details\n                    </p>\n                        </Right>\n                    </Header>\n\n                    <Messages>\n                        {\n                            roomMessages?.docs.map((doc) => {\n                                const { message, timestamp, user, userImage } = doc.data();\n\n                                return (\n                                    <Message\n                                        key={doc.id}\n                                        id={doc.id}\n                                        message={message}\n                                        timestamp={timestamp}\n                                        user={user}\n                                        userImage={userImage}\n                                    />\n                                )\n                            })\n                        }\n                        <Bottom ref={chatRef} />\n                    </Messages>\n\n                    <ChatInput\n                        chatRef={chatRef}\n                        channelName={roomDetails?.data().name}\n                        channelId={roomId}\n                    />\n                </>\n            )}\n        </Container>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}