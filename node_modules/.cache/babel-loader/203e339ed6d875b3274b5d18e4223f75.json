{"ast":null,"code":"import _slicedToArray from\"/Users/aisteinlaw/Documents/Code/slack-clone/slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{InfoOutlined,StarBorderOutlined}from\"@material-ui/icons\";import{selectRoomId}from\"../features/appSlice\";import{useSelector}from\"react-redux\";import{Container,Header,Right,Left,Messages,Bottom}from\"../styles/Chat.style\";import ChatInput from\"./ChatInput\";import{useCollection,useDocument}from\"react-firebase-hooks/firestore\";import{db}from\"../firebase\";import Message from\"./Message\";import{useEffect,useRef}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Chat(){var roomId=useSelector(selectRoomId);var _useDocument=useDocument(roomId&&db.collection(\"rooms\").doc(roomId)),_useDocument2=_slicedToArray(_useDocument,1),roomDetails=_useDocument2[0];var _useCollection=useCollection(roomId&&db.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\")),_useCollection2=_slicedToArray(_useCollection,1),roomMessages=_useCollection2[0];var chatRef=useRef(null);useEffect(function(){var _chatRef$current;chatRef===null||chatRef===void 0?void 0:(_chatRef$current=chatRef.current)===null||_chatRef$current===void 0?void 0:_chatRef$current.scrollIntoView({behavior:\"smooth\"});},[roomId,roomMessages]);return/*#__PURE__*/_jsx(Container,{children:roomDetails&&roomMessages&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Header,{children:[/*#__PURE__*/_jsxs(Left,{children:[/*#__PURE__*/_jsx(\"h4\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"#\",roomDetails===null||roomDetails===void 0?void 0:roomDetails.data().name]})}),/*#__PURE__*/_jsx(StarBorderOutlined,{})]}),/*#__PURE__*/_jsx(Right,{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(InfoOutlined,{}),\"Details\"]})})]}),/*#__PURE__*/_jsxs(Messages,{children:[roomMessages===null||roomMessages===void 0?void 0:roomMessages.docs.map(function(doc){var _doc$data=doc.data(),message=_doc$data.message,timestamp=_doc$data.timestamp,user=_doc$data.user,userImage=_doc$data.userImage;return/*#__PURE__*/_jsx(Message,{id:doc.id,message:message,timestamp:timestamp,user:user,userImage:userImage},doc.id);}),/*#__PURE__*/_jsx(Bottom,{ref:chatRef})]}),/*#__PURE__*/_jsx(ChatInput,{chatRef:chatRef,channelName:roomDetails===null||roomDetails===void 0?void 0:roomDetails.data().name,channelId:roomId})]})});}export default Chat;","map":{"version":3,"sources":["/Users/aisteinlaw/Documents/Code/slack-clone/slack-clone/src/components/Chat.js"],"names":["InfoOutlined","StarBorderOutlined","selectRoomId","useSelector","Container","Header","Right","Left","Messages","Bottom","ChatInput","useCollection","useDocument","db","Message","useEffect","useRef","Chat","roomId","collection","doc","roomDetails","orderBy","roomMessages","chatRef","current","scrollIntoView","behavior","data","name","docs","map","message","timestamp","user","userImage","id"],"mappings":"+KAAA,OAASA,YAAT,CAAuBC,kBAAvB,KAAiD,oBAAjD,CACA,OAASC,YAAT,KAA6B,sBAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,KAA5B,CAAmCC,IAAnC,CAAyCC,QAAzC,CAAmDC,MAAnD,KAAiE,sBAAjE,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,gCAA3C,CACA,OAASC,EAAT,KAAmB,aAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,C,6IAEA,QAASC,CAAAA,IAAT,EAAgB,CAEZ,GAAMC,CAAAA,MAAM,CAAGf,WAAW,CAACD,YAAD,CAA1B,CAFY,iBAGUU,WAAW,CAC7BM,MAAM,EAAIL,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,MAA3B,CADmB,CAHrB,8CAGLG,WAHK,qCAMWV,aAAa,CAChCO,MAAM,EACNL,EAAE,CACGM,UADL,CACgB,OADhB,EAEKC,GAFL,CAESF,MAFT,EAGKC,UAHL,CAGgB,UAHhB,EAIKG,OAJL,CAIa,WAJb,CAI0B,KAJ1B,CAFgC,CANxB,kDAMLC,YANK,oBAcZ,GAAMC,CAAAA,OAAO,CAAGR,MAAM,CAAC,IAAD,CAAtB,CAEAD,SAAS,CAAC,UAAM,sBACZS,OAAO,OAAP,EAAAA,OAAO,SAAP,0BAAAA,OAAO,CAAEC,OAAT,4DAAkBC,cAAlB,CAAiC,CAC7BC,QAAQ,CAAE,QADmB,CAAjC,EAGH,CAJQ,CAIN,CAACT,MAAD,CAASK,YAAT,CAJM,CAAT,CAMA,mBACI,KAAC,SAAD,WACKF,WAAW,EAAIE,YAAf,eACG,wCACI,MAAC,MAAD,yBACI,MAAC,IAAD,yBACI,iCACI,8BAAUF,WAAV,SAAUA,WAAV,iBAAUA,WAAW,CAAEO,IAAb,GAAoBC,IAA9B,GADJ,EADJ,cAII,KAAC,kBAAD,IAJJ,GADJ,cAQI,KAAC,KAAD,wBACI,kCACI,KAAC,YAAD,IADJ,aADJ,EARJ,GADJ,cAiBI,MAAC,QAAD,YAEQN,YAFR,SAEQA,YAFR,iBAEQA,YAAY,CAAEO,IAAd,CAAmBC,GAAnB,CAAuB,SAACX,GAAD,CAAS,eACoBA,GAAG,CAACQ,IAAJ,EADpB,CACpBI,OADoB,WACpBA,OADoB,CACXC,SADW,WACXA,SADW,CACAC,IADA,WACAA,IADA,CACMC,SADN,WACMA,SADN,CAG5B,mBACI,KAAC,OAAD,EAEI,EAAE,CAAEf,GAAG,CAACgB,EAFZ,CAGI,OAAO,CAAEJ,OAHb,CAII,SAAS,CAAEC,SAJf,CAKI,IAAI,CAAEC,IALV,CAMI,SAAS,CAAEC,SANf,EACSf,GAAG,CAACgB,EADb,CADJ,CAUH,CAbD,CAFR,cAiBI,KAAC,MAAD,EAAQ,GAAG,CAAEZ,OAAb,EAjBJ,GAjBJ,cAqCI,KAAC,SAAD,EACI,OAAO,CAAEA,OADb,CAEI,WAAW,CAAEH,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEO,IAAb,GAAoBC,IAFrC,CAGI,SAAS,CAAEX,MAHf,EArCJ,GAFR,EADJ,CAiDH,CAED,cAAeD,CAAAA,IAAf","sourcesContent":["import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\"\nimport { selectRoomId } from \"../features/appSlice\"\nimport { useSelector } from \"react-redux\";\nimport { Container, Header, Right, Left, Messages, Bottom } from \"../styles/Chat.style\"\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\"\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { useEffect, useRef } from \"react\";\n\nfunction Chat() {\n\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection(\"rooms\").doc(roomId)\n    )\n    const [roomMessages] = useCollection(\n        roomId &&\n        db\n            .collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy(\"timestamp\", \"asc\")\n    );\n    const chatRef = useRef(null);\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior: \"smooth\",\n        });\n    }, [roomId, roomMessages])\n\n    return (\n        <Container>\n            {roomDetails && roomMessages && (\n                <>\n                    <Header>\n                        <Left>\n                            <h4>\n                                <strong>#{roomDetails?.data().name}</strong>\n                            </h4>\n                            <StarBorderOutlined />\n                        </Left>\n\n                        <Right>\n                            <p>\n                                <InfoOutlined />\n                            Details\n                    </p>\n                        </Right>\n                    </Header>\n\n                    <Messages>\n                        {\n                            roomMessages?.docs.map((doc) => {\n                                const { message, timestamp, user, userImage } = doc.data();\n\n                                return (\n                                    <Message\n                                        key={doc.id}\n                                        id={doc.id}\n                                        message={message}\n                                        timestamp={timestamp}\n                                        user={user}\n                                        userImage={userImage}\n                                    />\n                                )\n                            })\n                        }\n                        <Bottom ref={chatRef} />\n                    </Messages>\n\n                    <ChatInput\n                        chatRef={chatRef}\n                        channelName={roomDetails?.data().name}\n                        channelId={roomId}\n                    />\n                </>\n            )}\n        </Container>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}